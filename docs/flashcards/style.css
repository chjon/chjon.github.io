:root {
  --card-width: min(80vw, 45rem);
  --card-border-radius: calc(0.04 * var(--card-width));
  --card-height: calc(3/5 * var(--card-width));
  --card-header-percent: 0.2;

  --background-color: rgb(252, 242, 227);
  --card-header-color: lightgreen;
  --card-color: white;
  --animation-duration: 0.25s;

  --header-font-size: 24pt;
  --body-font-size: 20pt;
}

body {
  width: 100%;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: var(--card-border-radius);
  background-color: var(--background-color);
  overflow: hidden;
}

.carousel {
  width: var(--card-width);
  height: var(--card-height);
  * { position: absolute };
}

/* Cards */
.card-content {
  position: absolute;
  border-radius: var(--card-border-radius);
  width: var(--card-width);
  height: var(--card-height);
  box-shadow: 2px 2px 5px black;
  display: flex;
  flex-direction: column;
  align-items: center;
  * {
    position: relative;
  }
}
.card-header {
  padding: var(--card-border-radius);
  width: calc(100% - 2 * var(--card-border-radius));
  height: calc(var(--card-header-percent) * var(--card-height) - 2 * var(--card-border-radius));
  border-top-left-radius: var(--card-border-radius);
  border-top-right-radius: var(--card-border-radius);
  background-color: var(--card-header-color);
  display: flex;
  align-items: center;
}
.card-body {
  padding: var(--card-border-radius);
  width: calc(100% - 2 * var(--card-border-radius));
  height: calc((1 - var(--card-header-percent)) * var(--card-height));
  background-color: var(--card-color);
  border-bottom-left-radius: var(--card-border-radius);
  border-bottom-right-radius: var(--card-border-radius);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

/* Font styling */
p, pre { margin: 0; }
.card-header * {
  font-size: var(--header-font-size);
}
.menu-card pre {
  padding-left: 16pt;
  padding-right: 16pt;
  font-size: 16pt;
}
.menu-card .card-body {
  text-align: left;
  font-size: var(--body-font-size);
  row-gap: 16pt;
}
.content-card .card-body p {
  display: contents;
  font-size: var(--body-font-size);;
}
input {
  font-size: var(--body-font-size);
}
kbd {
  background-color: white;
  color: black;
  border-radius: 0.3rem;
  border: 1px solid black;
  box-shadow: 0 2px 0 1px black;
  cursor: default;
  font-size: 1.2rem;
  line-height: 1;
  display: block;
  text-align: center;
  padding: 3px 2px;
  position: relative;
  top: -1px;
}

/* Button bar */
.button-bar {
  display: flex;
  justify-content: center;
  column-gap: var(--card-border-radius);
}
.button-bar button {
  width: calc((var(--card-width) - var(--card-border-radius)) / 2);
  height: calc(2 * var(--card-border-radius));
  border-radius: var(--card-border-radius);
}

/* Intro content */
.intro-content th, .intro-content td {
  padding: 0 var(--card-border-radius) 0 var(--card-border-radius);
}
.flashcard-selector {
  width: calc(0.75 * var(--body-font-size));
  height: calc(0.75 * var(--body-font-size));
  vertical-align: middle;
}
.file-selector {
  width: calc(var(--card-width) - 2 * var(--card-border-radius));
  text-overflow: clip;
}

/**************/
/* Animations */
/**************/

/* Flip card */
.card {
  &:not(.flipped) .a-side, &.flipped .q-side {
    transform: scaleX(0);
    transition: calc(var(--animation-duration) / 2);
  }
  &:not(.flipped) .q-side, &.flipped .a-side {
    transform: scaleX(1);
    transition: calc(var(--animation-duration) / 2);
    transition-delay: calc(var(--animation-duration) / 2);
  }
}
.card.out-left, .card.out-right {
  pointer-events: none;
  &:not(.flipped) .a-side, &.flipped .q-side {
    transition-delay: calc(var(--animation-duration) / 2);
  }
  &:not(.flipped) .q-side, &.flipped .a-side {
    transition-delay: var(--animation-duration);
  }
}

/* Next/prev card */
.card.out-left {
  opacity: 0%;
  transform: translate(calc(-1.2 * var(--card-width)));
  transition: var(--animation-duration);
}
.card.in-centre {
  opacity: 100%;
  transition: var(--animation-duration);
}
.card.out-right {
  opacity: 0%;
  transform: translate(calc(1.2 * var(--card-width)));
  transition: var(--animation-duration);
}